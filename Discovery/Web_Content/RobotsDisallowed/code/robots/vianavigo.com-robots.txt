<!DOCTYPE html
     PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr-FR">
<head>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<!-- 
	This website is powered by TYPO3 - inspiring people to share!
	TYPO3 is a free open source Content Management Framework initially created by Kasper Skaarhoj and licensed under GNU/GPL.
	TYPO3 is copyright 1998-2015 of Kasper Skaarhoj. Extensions are copyright of their respective owners.
	Information and contribution at http://typo3.org/
-->

<base href="http://vianavigo.com/" />

<title>Itinéraires - Vianavigo, vos transports sur Paris et l'Ile-de-France : OPTILE, RATP, SNCF: Train RER métro tramway bus</title>
<meta name="generator" content="TYPO3 4.5 CMS" />
<meta name="keywords" content="Le site Vianavigo.com, transports à Paris et en Ile-de-France : train, transilien, rer, bus, car, métro, tramway, tzen. OPTILE, SNCF, TRANSILIEN, RATP, itinéraire, itinéraire idf, trajet, vianavigo, STIF, transport en commun, ile de France, paris, idf, francilien, itinéraire, déplacement, séjour, visite, loisir, horaire, plan de ligne, ligne, station, gare, arrêt, train, transilien, RER, métro, tramway, Tzen, bus, ratp, sncf, optile, titre de transport, ticket, tarif, info trafic, trafic, grève, temps réel, via navigo, à éviter, forfait, proximité, perturbation, travaux, information voyageur, voyage, vente, achat" />
<meta name="description" content="Vianavigo permet de préparer vos déplacements en transports en commun sur l'Ile de France, de calculer un itinéraire, de trouver les transports à proximité d'un lieu, d'être informé sur les perturbations, de consulter les plans de ligne et les horaires pour les trains, RER, métros, tramways, TZen, bus ou cars." />

<link rel="stylesheet" type="text/css" href="typo3temp/stylesheet_e0b71497f5.css?1410786765" media="all" />



<script src="typo3temp/javascript_a1cb3a5978.js?1410786743" type="text/javascript"></script>




	<!-- pp_lib:headmgr BEGIN  -->

	<!-- HOOK part : pplib-js -->
	<script type="text/javascript" src="typo3temp/pplib_js_a9fd133f8a.js"></script>


	<!-- pp_lib:headmgr END -->

	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link rel="Shortcut icon" href="fileadmin/templates/STIF/images/favicon.ico" type="image/x-icon" />
<link href="fileadmin/templates/STIF/reset.css" media="all" type="text/css" rel="stylesheet" />
<link href="fileadmin/templates/STIF/default.css" media="all" type="text/css" rel="stylesheet" />
<link href="fileadmin/templates/STIF/openlayers.css" media="all" type="text/css" rel="stylesheet" />
<link href="fileadmin/templates/STIF/fancybox/jquery.fancybox-1.3.4.css" media="all" type="text/css" rel="stylesheet" />
<!--[if IE ]><link href="fileadmin/templates/STIF/default-ie.css" type="text/css" rel="stylesheet" /><![endif]-->
<!--[if IE 6]><link href="fileadmin/templates/STIF/default-ie6.css" type="text/css" rel="stylesheet" /><![endif]-->
<!--[if IE 7]> <link href="fileadmin/templates/STIF/default-ie7.css" type="text/css" rel="stylesheet" /> <![endif]-->
<!--[if gt IE 7]><link href="fileadmin/templates/STIF/default-iegt7.css" type="text/css" rel="stylesheet" /><![endif]-->

<script type="text/javascript">
	var typeforpopup = 10;
	var popupTutorial = 124;
</script>



</head>
<body>


<div id="wrap">
	<div id="header">
		<div id="stif"><b>un site du</b>&nbsp;<a href="http://www.stif.info" target="_blank"><img src="uploads/pics/stif_01.png" width="45" height="15" border="0" alt="" /></a></div>
		<div id="menu"><ul><li class="noBorder"><a href="fr/aide/">Aide</a></li><li><a href="fr/aide/accessibilite/">Accessibilité</a></li><li><a href="fr/nous-contacter/">Contact</a></li><li><a href="fr/mon-espace/">Mon espace</a></li><li><a href="fr/tous-les-sites/">Tous les sites</a><img src="uploads/media/banner3.png" width="8" height="9" border="0" alt="" /><ul>
<li><a href="http://www.infomobi.com" target="_blank">Infomobi</a></li>
<li><a href="http://www.navigo.fr/" target="_blank">Navigo</a></li>
<li><a href="http://www.omnil.fr/" target="_blank">OMNIL</a></li>
<li><a href="http://www.pduif.fr" target="_blank">PDUIF</a></li>
<li><a href="http://www.solidaritetransport.fr" target="_blank">Solidarité Transport</a></li>
<li><a href="http://www.stif.info/" target="_blank">STIF</a></li>
<li><a href="http://www.tzen.com/" target="_blank">T Zen</a></li>
</ul></li><li><a href="en/routes-district-maps/"><img src="typo3/sysext/t3skin/images/flags/gb.png" width="16" height="11" border="0" alt="" /></a></li></ul></div>
		<div class="siteTitle"><a href="fr/itineraire-plan-de-quartier/" title="vianavigo.com"><span>vianavigo.com</span></a></div><div id="headerIntro"><p><b>Se déplacer en Île-de-France <br /></b></p><ul> <li><a href="fr/horaires-plans-de-lignes/trainrer/" title="Train" class="internal-link">TRAIN</a></li> <li><a href="fr/horaires-plans-de-lignes/trainrer/" title="RER" class="internal-link">RER</a></li> <li><a href="fr/horaires-plans-de-lignes/metro/" title="Metro" class="internal-link">MÉTRO</a></li> <li><a href="fr/horaires-plans-de-lignes/tramtzen/" title="Tramway" class="internal-link">TRAM</a></li> <li><a href="fr/horaires-plans-de-lignes/tramtzen/" title="TZen" class="internal-link">T ZEN</a></li> <li><a href="fr/horaires-plans-de-lignes/buscar/" title="BUS" class="internal-link">BUS</a></li> <li><a href="fr/horaires-plans-de-lignes/noctilien/" title="Noctilien" class="internal-link">NOCTILIEN</a></li> </ul></div>
		
	</div>
	<div id="content">
		<div id="leftCol">

			<div class="menu enabled"><ul><li class="first current"><a href="fr/itineraire-plan-de-quartier/">Itinéraire &amp; Plan de quartier</a></li><li class="last"><a href="fr/horaires-plans-de-lignes/trainrer/">Horaires &amp; Plans de lignes</a></li></ul></div>
			<div id="leftContent"><!--TYPO3SEARCH_begin--><div class="tx-swordinclude-pi1">
		





<script type="text/javascript">
<!--
var isItinerarySchemaMap;
var currentIdTrajet;
function setMapWaitCursor(wait) {
	if (wait) {
		$("[id='map-1']").css('cursor','wait');
		$("[id='map-2']").css('cursor','wait');
		$("[id='map-3']").css('cursor','wait');
	}
	else {
		$("[id='map-1']").css('cursor','pointer');
		$("[id='map-2']").css('cursor','default');
		$("[id='map-3']").css('cursor','default');
	}
}
function drawItinerarySchema(res, target) {
	var text_style = OpenLayers.Util.applyDefaults({strokeOpacity:0, fillOpacity:0, fontColor:"black", fontSize:"11px", fontFamily:"Arial, Helvetica, sans-serif", fontWeight:"bold", labelOutlineColor: "white", labelOutlineWidth: "6"}, OpenLayers.Feature.Vector.style['default']);
	var text_style_bus = OpenLayers.Util.applyDefaults({strokeOpacity:0, fillOpacity:0, fontColor:"white", fontSize:"10px", fontFamily:"Arial, Helvetica, sans-serif", fontWeight:"bold", labelOutlineColor: "grey", labelOutlineWidth: "10"}, OpenLayers.Feature.Vector.style['default']);
	var back_line_style = OpenLayers.Util.applyDefaults({strokeWidth:10, strokeColor:"#000000", strokeOpacity:1}, OpenLayers.Feature.Vector.style['default']);
	var default_line_style = {strokeWidth:8, strokeOpacity:1};
	
	clearLayers(getVectorLayerByTarget(target), getMarkerLayerByTarget(target));
	for (var i = 0; i < res.list.length; i++)
	{
		var path = res.list[i];
		var line_style = OpenLayers.Util.applyDefaults({strokeColor: path.color}, default_line_style);
		drawLineVectorLayer(getVectorLayerByTarget(target), path.wktSchema, back_line_style, {typeLine: "highlight", order: null, lineEC: path.lineEC, modeEC: path.modeEC, lineCode: path.lineCode});
		drawLineVectorLayer(getVectorLayerByTarget(target), path.wktSchema, line_style, {order: path.order, lineEC: path.lineEC, modeEC: path.modeEC, lineCode: path.lineCode});
		
		if (path.middlePictoSchemaX > 0 && path.middlePictoSchemaY > 0) {
			if (!isEmpty(path.lineCode)) {
				drawTextVectorLayer(getVectorLayerByTarget(target), path.middlePictoSchemaX, path.middlePictoSchemaY, path.lineCode, {type:"picto", length:path.lengthSchema}, text_style_bus);
			} else if (!isEmpty(path.pictoName)) {
				markImage(target, path.middlePictoSchemaX, path.middlePictoSchemaY, "fileadmin/templates/STIF/picto_ligne_24/" + path.pictoName + ".png", 24, 24, {type:"picto",length:path.lengthSchema});
			}
		}
		
		if (i == 0 && path.beginSchemaX > 0 && path.beginSchemaY > 0) {
			mark(target, path.beginSchemaX, path.beginSchemaY, "inter", {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
			mark(target, path.beginSchemaX, path.beginSchemaY, "begin", {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
		} else if (path.departureVia) {
			mark(target, path.beginSchemaX, path.beginSchemaY, "inter", {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
			mark(target, path.beginSchemaX, path.beginSchemaY, "via", {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");	
		} else if (path.beginSchemaX > 0 && path.beginSchemaY > 0) {
			mark(target, path.beginSchemaX, path.beginSchemaY, "inter", {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:false}, "fileadmin/templates/STIF/images/");
		}
		
		if (i == res.list.length - 1 && path.endSchemaX > 0 && path.endSchemaY > 0) {
			mark(target, path.endSchemaX, path.endSchemaY, "inter", {stopPointEC: path.endStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
			mark(target, path.endSchemaX, path.endSchemaY, "end", {stopPointEC: path.endStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
		} else if (path.arrivalVia) {
			mark(target, path.endSchemaX, path.endSchemaY, "inter", {stopPointEC: path.endStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
			mark(target, path.endSchemaX, path.endSchemaY, "via", {stopPointEC: path.endStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
		} else if (path.endSchemaX > 0 && path.endSchemaY > 0) {
			mark(target, path.endSchemaX, path.endSchemaY, "inter", {stopPointEC: path.endStopPointEC, modeEC: path.modeEC, isSchema:true, isIti:true, isBeginArrivalVia:false, name:path.pictoName}, "fileadmin/templates/STIF/images/");
		}

		//Texte		
		if (!isEmpty(path.beginLabelSchema) && path.beginSchemaX > 0 && path.beginSchemaY > 0) {
				var isDepViaArr = (i == 0 || path.departureVia);
			if (!isDepViaArr && i == 1 && res.list.length > 2) {
				if (res.list[i+1].type == "walk") {
					isDepViaArr = true;
				}
			}
			var pos = defineTextPos(path.positionBeginLabelSchema, isDepViaArr);
			drawTextVectorLayer(getVectorLayerByTarget(target), path.beginSchemaX, path.beginSchemaY, path.beginLabelSchema, {type:"text", x:path.beginSchemaX, y:path.beginSchemaY, offset:pos.offsetX, isDepArr:isDepViaArr}, text_style, pos.align, pos.offsetX, pos.offsetY);
			
		}
		if (!isEmpty(path.endLabelSchema) && path.endSchemaX > 0 && path.endSchemaY > 0) {
			var isDepViaArr = (i == res.list.length - 1 || path.arrivalVia);
			if (!isDepViaArr && i == res.list.length -2) {
				if (res.list[i+1].type == "walk") {
					isDepViaArr = true;
				}
			}
			var pos = defineTextPos(path.positionEndLabelSchema, isDepViaArr);
			drawTextVectorLayer(getVectorLayerByTarget(target), path.endSchemaX, path.endSchemaY, path.endLabelSchema, {type:"text", x:path.endSchemaX, y:path.endSchemaY, offset:pos.offsetX, isDepArr:isDepViaArr}, text_style, pos.align, pos.offsetX, pos.offsetY);
		}
	}
	//Zoom sur l'itinéraire
	zoomToExtend(target);
	moveText(target);
}
function textWidth(text) {
	 var calc = '<span style="display:none">' + text + '</span>';
	 $('body').append(calc);
	 var width = $('body').find('span:last').width();
	 $('body').find('span:last').remove();
	 return width;
}
function moveText(target) {
	if (isItinerarySchemaMap) {
		var map = getMapByTarget(target);
		if (map) {
			var zoomLevel = map.getZoom();
			var widthMap = map.getMaxExtent().right - map.getMaxExtent().left;
			//Afficahge et Repositonnement libellés
			var textLayer = getVectorLayerByTarget(target);
			for (var i = 0; i < textLayer.features.length; i++)
			{
				var feature = textLayer.features[i];
				if (feature.data && feature.data.type=="text") {
					
					var display = true;
					if (!feature.data.isDepArr && zoomLevel==0) {
						feature.style.display = "none";
						display = false;
					}
					else {
						feature.style.display = "block";
					}
					if (display) {
						var textWidthMap = textWidth(feature.style.label) * map.getResolution() * 1.2;
						var offsetMap = feature.data.offset * map.getResolution() * 1;
						if (offsetMap > 0 && feature.data.x + textWidthMap + offsetMap > widthMap) {
							feature.geometry.x = widthMap - textWidthMap - offsetMap;
						}
						else if (offsetMap < 0 && feature.data.x - textWidthMap + offsetMap < 0) {
							feature.geometry.x =  textWidthMap - offsetMap + map.getMaxExtent().left;
						}
						else {
							feature.geometry.x = feature.data.x;
						}
					}
				}
				else if (feature.data && feature.data.type=="picto") {
					if (parseFloat(feature.data.length) / map.getResolution() < 45) 
					{
						feature.style.display = "none";
					}
					else {
						feature.style.display = "block";
					}
				}
			}
			//Afficahge pictos
			var markerLayer = getMarkerLayerByTarget(target);
			for (var i = 0; i < markerLayer.markers.length; i++) {
				var marker = markerLayer.markers[i];
				if (marker.data && marker.data.type=="picto") {
					if (parseFloat(marker.data.length) / map.getResolution() < 45) 
					{
						marker.display(false);
					}
					else {
						marker.display(true);
					}
				}
			}
			textLayer.redraw();
			markerLayer.redraw();
		}		
	}
}
function drawItineraryCarto(res, target) {
	drawCarto(res,target);
	//Zoom sur l'itinéraire
	zoomToExtend(target);
}
function drawStep(res, target) {
	drawCarto(res, target);
	rememberStep(res);
}
function drawCarto(res, target) {
	var text_style = OpenLayers.Util.applyDefaults({strokeOpacity:0, fillOpacity:0, fontColor:"black", fontSize:"11px", fontFamily:"Arial, Helvetica, sans-serif", fontWeight:"bold", labelOutlineColor: "white", labelOutlineWidth: "6"}, OpenLayers.Feature.Vector.style['default']);
	var text_style_bus = OpenLayers.Util.applyDefaults({strokeOpacity:0, fillOpacity:0, fontColor:"white", fontSize:"10px", fontFamily:"Arial, Helvetica, sans-serif", fontWeight:"bold", labelOutlineColor: "grey", labelOutlineWidth: "10"}, OpenLayers.Feature.Vector.style['default']);
	var back_line_style = OpenLayers.Util.applyDefaults({strokeWidth:10, strokeColor:"#000000", strokeOpacity:1}, OpenLayers.Feature.Vector.style['default']);
	var walk_line_style = OpenLayers.Util.applyDefaults({strokeWidth:6, strokeOpacity:0.3, strokeColor:"#002C81"}, OpenLayers.Feature.Vector.style['default']);
	var default_line_style = {strokeWidth:8, strokeOpacity:1};
	var walk_access_line_style = OpenLayers.Util.applyDefaults({strokeWidth:4, strokeOpacity:1, strokeColor:"#002C81", strokeDashstyle: "1,8"}, OpenLayers.Feature.Vector.style['default']);
	clearLayers(getVectorLayerByTarget(target), getMarkerLayerByTarget(target));
	for (var i = 0; i < res.list.length; i++)
	{
		var path = res.list[i];
		var line_style = OpenLayers.Util.applyDefaults({strokeColor: path.color}, default_line_style);
		if (path.type == "walk") {
			drawLineVectorLayer(getVectorLayerByTarget(target), path.wktCarto, walk_line_style, null);
			drawLineVectorLayer(getVectorLayerByTarget(target), path.wktCarto2, walk_access_line_style, null);
		}
		else {
			drawLineVectorLayer(getVectorLayerByTarget(target), path.wktCarto, back_line_style, {typeLine: "highlight", order: null, lineEC: path.lineEC, modeEC: path.modeEC, lineCode: path.lineCode, direction:path.direction, date:path.date});
			drawLineVectorLayer(getVectorLayerByTarget(target), path.wktCarto, line_style, {order: path.order, lineEC: path.lineEC, modeEC: path.modeEC, lineCode: path.lineCode, direction:path.direction, date:path.date});	
		}

		if (path.beginPictoCartoX > 0 && path.beginPictoCartoY > 0) {
			if (!isEmpty(path.lineCode)) {
				drawTextVectorLayer(getVectorLayerByTarget(target), path.beginPictoCartoX, path.beginPictoCartoY, path.lineCode, null, text_style_bus);
			} else if (!isEmpty(path.pictoName)) {
				markImage(target, path.beginPictoCartoX, path.beginPictoCartoY, "fileadmin/templates/STIF/picto_ligne_24/" + path.pictoName + ".png", 24, 24, null);
			}
		}
		if (path.endPictoCartoX > 0 && path.endPictoCartoY > 0) {
			if (!isEmpty(path.lineCode)) {
				drawTextVectorLayer(getVectorLayerByTarget(target), path.endPictoCartoX, path.endPictoCartoY, path.lineCode, null, text_style_bus);
			} else if (!isEmpty(path.pictoName)) {
				markImage(target, path.endPictoCartoX, path.endPictoCartoY, "fileadmin/templates/STIF/picto_ligne_24/" + path.pictoName + ".png", 24, 24, null);
			}
		}
		
		if (i == 0 && path.beginCartoX > 0 && path.beginCartoY > 0) {
			mark(target, path.beginCartoX, path.beginCartoY, "inter", {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC, isSchema:false, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
			mark(target, path.beginCartoX, path.beginCartoY, "begin",  {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC, isSchema:false, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
		} else if (path.departureVia) {
			mark(target, path.beginCartoX, path.beginCartoY, "inter", {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC, isSchema:false, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
			mark(target, path.beginCartoX, path.beginCartoY, "via", {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC,isSchema:false, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
		} else if (path.beginCartoX > 0 && path.beginCartoY > 0) {
			mark(target, path.beginCartoX, path.beginCartoY, "inter", {stopPointEC: path.beginStopPointEC, modeEC: path.modeEC, isSchema:false, isIti:true, isBeginArrivalVia:false}, "fileadmin/templates/STIF/images/");
		}
		
		if (i == res.list.length - 1 && path.endCartoX > 0 && path.endCartoY > 0) {
			mark(target, path.endCartoX, path.endCartoY, "inter",  {stopPointEC: path.endStopPointEC, modeEC: path.modeEC, isSchema:false, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
			mark(target, path.endCartoX, path.endCartoY, "end",  {stopPointEC: path.endStopPointEC, modeEC: path.modeEC, isSchema:false, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
		}  else if (path.arrivalVia) {
			mark(target, path.endCartoX, path.endCartoY, "inter",  {stopPointEC: path.endStopPointEC, modeEC: path.modeEC, isSchema:false, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
			mark(target, path.endCartoX, path.endCartoY, "via", {stopPointEC: path.endStopPointEC, modeEC: path.modeEC,isSchema:false, isIti:true, isBeginArrivalVia:true}, "fileadmin/templates/STIF/images/");
		} else if (path.endCartoX > 0 && path.endCartoY > 0) {
			mark(target, path.endCartoX, path.endCartoY, "inter",  {stopPointEC: path.endStopPointEC, modeEC: path.modeEC, isSchema:false, isIti:true, isBeginArrivalVia:false}, "fileadmin/templates/STIF/images/");
		}
		
		//Texte
		if (!isEmpty(path.beginLabelCarto) && path.beginCartoX > 0 && path.beginCartoY > 0) {
			var pos = defineTextPos(path.positionBeginLabelCarto, i == 0  || path.departureVia);
			drawTextVectorLayer(getVectorLayerByTarget(target), path.beginCartoX, path.beginCartoY, path.beginLabelCarto, null, text_style, pos.align, pos.offsetX, pos.offsetY);
		}
		if (!isEmpty(path.endLabelCarto) && path.endCartoX > 0 && path.endCartoY > 0) {
			var pos = defineTextPos(path.positionEndLabelCarto, i == res.list.length - 1  || path.arrivalVia);
			drawTextVectorLayer(getVectorLayerByTarget(target), path.endCartoX, path.endCartoY, path.endLabelCarto, null, text_style, pos.align, pos.offsetX, pos.offsetY);
		}
	}
}

var listStepEnv;
function rememberStep(res) {
	listStepEnv = new Array();
	for (var i = 0; i < res.list.length; i++)
	{
		var path = res.list[i];
		if (path.type == "walk") {
			listStepEnv[path.order]={type:path.type, minX:path.cartoMinX, maxX:path.cartoMaxX, minY:path.cartoMinY, maxY:path.cartoMaxY};
		}
		else {
			listStepEnv[path.order]={type:path.type, minX:path.beginCartoX, maxX:path.endCartoX, minY:path.beginCartoY, maxY:path.endCartoY};
		}
	}
}
function showStepDep(target) {
	if (!listStepEnv){		
		 return;
	}
	var first = listStepEnv[0];
	if (first) {
		if ((first.minX == first.maxX && first.minY == first.maxY) || first.type != "walk") {
			//Pour le départ, prend le premier point
			centerMap(getMapByTarget(target),parseFloat(first.minX),parseFloat(first.minY), 3);
		}
		else {
			//Si ca commence par du piéton, prend le piéton
			zoomMap(getMapByTarget(target),parseFloat(first.minX),parseFloat(first.minY),parseFloat(first.maxX),parseFloat(first.maxY));
		}
		active(target);
	}
}
function showStepWalk(order, target) {
	if (!listStepEnv) return;
	var env = listStepEnv[order];
	if (env) {
		if (env.minX == env.maxX && env.minY == env.maxY) {
			//Pour le départ, prend le premier point
			centerMap(getMapByTarget(target),parseFloat(env.minX),parseFloat(env.minY), 3);
		}
		else {
			//Si ca commence par du piéton, prend le piéton
			zoomMap(getMapByTarget(target),parseFloat(env.minX),parseFloat(env.minY),parseFloat(env.maxX),parseFloat(env.maxY));
		}
		active(target);
	}
}
function showStepWait(order, target) {
	if (!listStepEnv) return;
	var previous = listStepEnv[order-1];
	if (previous) {
		centerMap(getMapByTarget(target),parseFloat(previous.maxX),parseFloat(previous.maxY), 3);
		active(target);
	}
}
function showStepArr(target) {
	if (!listStepEnv) return;
	var last = listStepEnv[listStepEnv.length-1];
	if (last) {
		if ((last.minX == last.maxX && last.minY == last.maxY) || last.type != "walk") {
			//Pour le départ, prend le premier point
			centerMap(getMapByTarget(target),parseFloat(last.maxX),parseFloat(last.maxY), 3);
		}
		else {
			//Si ca commence par du piéton, prend le piéton
			zoomMap(getMapByTarget(target),parseFloat(last.minX),parseFloat(last.minY),parseFloat(last.maxX),parseFloat(last.maxY));
		}
		active(target);
	}
}

function highlightConnection(num, target) {
	var hover_line_style = {strokeWidth:15, strokeOpacity:1};
	changeStyleVectorLayer(getVectorLayerByTarget(target), num, hover_line_style);
	//active(target);
}

function clearHighlightConnection(num, target) {
	var default_line_style = {strokeWidth:8, strokeOpacity:1};
	changeStyleVectorLayer(getVectorLayerByTarget(target), num, default_line_style);
}

function setWalkSpeed(speedNumber) {
	var speed;
	if (speedNumber ==0) {
		speed = 45;
	}
	else if (speedNumber ==1) {
		speed = 70;
	}
	else if (speedNumber ==2) {
		speed =  90;
	}
	changeSpeed(speed);
}

function zoomToExtend(target) {
	var map = getMapByTarget(target);
	if (map) {
		var extent;
		var vectorLayer = getVectorLayerByTarget(target);
		if (vectorLayer && vectorLayer.getDataExtent()) {
			extent = vectorLayer.getDataExtent();
		} else {
			var markerLayer = getMarkerLayerByTarget(target);
			if (markerLayer && markerLayer.getDataExtent()) {
				extent = markerLayer.getDataExtent();
			}
		}
		if (extent) {
			var xdecal = 25;;
			var ydecal = 10;;
 			zoomMap(map, extent.left - xdecal * map.getResolution(), extent.bottom - ydecal * map.getResolution(), extent.right + xdecal * map.getResolution(), extent.top + ydecal * map.getResolution());
		} else {
			map.zoomToMaxExtent();
		}
	}
}
//-->
</script>

<script type="text/javascript">
<!--
$(document).ready(function() {
	initHiddenBlock();
	
	clearAllMaps();
	active("general");

	var lastDate = new Date(2015, 10-1, 11);
	var startDate = new Date(2015, 9-1, 16);
	
	initAutoComplete("departure", "/stif_web_carto/rest/searchPoints/");
	initAutoComplete("arrival", "/stif_web_carto/rest/searchPoints/");
	initAutoComplete("via", "/stif_web_carto/rest/searchPoints/", "StopArea");
	initTitleToInput("departure");
	initTitleToInput("arrival");
	initTitleToInput("via");

	$("#date").datepicker({
		showOn: "focus",
		buttonImage: "fileadmin/templates/STIF/images/calendar.png",
		buttonImageOnly: true,
		closeText: 'Fermer',
		prevText: 'Préc.',
		nextText: 'Suiv.',
		currentText: 'Courant',
		monthNames: ['Janvier','Février','Mars','Avril','Mai','Juin', 'Juillet','Août','Septembre','Octobre','Novembre','Décembre'],
		monthNamesShort: ['Jan','Fév','Mar','Avr','Mai','Jun','Jul','Aoû','Sep','Oct','Nov','Déc'],
		dayNames: ['Dimanche','Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi'],
		dayNamesShort: ['Dim','Lun','Mar','Mer','Jeu','Ven','Sam'],
		dayNamesMin: ['Di','Lu','Ma','Me','Je','Ve','Sa'],
		weekHeader: 'Sm',
		dateFormat: 'dd/mm/yy',
		firstDay: 1,
		minDate: startDate,
		maxDate: lastDate			
	});

	ajaxifyForm("itinerarySearchForm", "contentItinerary", "/stif_web_carto/comp/itinerary/search.html", "<img alt='chargement' src='fileadmin/templates/STIF/images/loader1.gif' />");
	
	ajaxifyAnchor("returnItineraryAnchor", "contentItinerary", "/stif_web_carto/comp/itinerary/search.html", "<img alt='chargement' src='fileadmin/templates/STIF/images/loader1.gif' />");

	

	if ($("div[class='errorsText']:visible").length == 0) {
		enableMap('general');
	}
	else {
		disableMap('general');
	}
	setWalkSpeed(1);
	setMapWaitCursor(false);

	loadPopupStifWebApp();

	showJSFunctionality();
	
	setUpAjaxHeadersContext({"IncludeContext":"fr/itineraire-plan-de-quartier/?", "IncludePrintURI":"fr/impression/"});

	
	
});

function drawDistrict() {
	var text_style = OpenLayers.Util.applyDefaults({strokeOpacity:0, fillOpacity:0, fontColor:"black", fontSize:"11px", fontFamily:"Arial, Helvetica, sans-serif", fontWeight:"bold", labelOutlineColor: "white", labelOutlineWidth: "6"}, OpenLayers.Feature.Vector.style['default']);
	var type;
	
	
	
	var x = parseFloat("");
	var y = parseFloat("");

	mark("district", x, y, "inter",  null, "fileadmin/templates/STIF/images/");
	mark("district", x, y, type, null, "fileadmin/templates/STIF/images/");
//	if ("" != "") {
//		var text_style = OpenLayers.Util.applyDefaults({strokeOpacity:0, fillOpacity:0, fontColor:"black", fontSize:"11px", fontFamily:"Arial, Helvetica, sans-serif", fontWeight:"bold", labelOutlineColor: "white", labelOutlineWidth: "6"}, OpenLayers.Feature.Vector.style['default']);
//		drawTextVectorLayer(getVectorLayerByTarget("district"), x, y, "", {type:"text"}, text_style,  "rb", -5, 5);
//	}
	centerMap(getMapByTarget("district"), x, y, 3);
	active('district');	
}
//-->
</script>






























<div id="contentItinerary" class="includeContent">
  <h1 class="search underMenu">
    <span class="label">Itinéraire
    </span> <a href="index.php?id=98&amp;tx_swordhelpers_pi1[tags]=tag_iti_search&amp;L=0" target="_blank" class="stif_popup_webapp"> <img src="fileadmin/templates/STIF/images/help.png" alt="Afficher l'aide" title="Afficher l'aide"/> </a> <span class="clearBoth"></span>
  </h1>
  <form id="itinerarySearchForm" action="fr/itineraire-plan-de-quartier/?" method="get">
    <input id="mrq" name="mrq" type="hidden" value=""/>
    <input type="hidden" name="id" value="14" />
    
    
    
    
    
    
    <div class="searchBlock">
      
      
      <input type="submit" tabindex="-1" name="submitSearchItinerary" value="" class="inputHidden" />
      <table border="1" class="tabFormSearchItinerary">
        <tr>
          
          <td class="tdFlag">
            
            <input id="departure" name="departure" class="flag green" title="Départ (Adresse, arrêt, lieu...)" type="text" value=""/>
            <input id="departureType" name="departureType" type="hidden" value=""/>
            <input id="departureCity" name="departureCity" type="hidden" value=""/>
            <input id="departureCoordX" name="departureCoordX" type="hidden" value=""/>
            <input id="departureCoordY" name="departureCoordY" type="hidden" value=""/>
            <input id="departureExternalCode" name="departureExternalCode" type="hidden" value=""/>              
            <input id="departureCityCode" name="departureCityCode" type="hidden" value=""/>
          </td>
          
          
          
          
            <td class="tdBtnActions">
            <input type="submit" tabindex="-1" name="submitFavoriteDeparture" value="" class="submitFavoriteBtn" title="Sélectionner un favori pour le départ" />
            <input type="submit" tabindex="-1" name="submitDistrictMapDeparture" value="" class="withoutJS submitDistrictMapBtn" title="Afficher le Plan de quartier du départ" />
            </td>
          
          
          
          <td class="tdRevert" rowspan="2">
            <input type="submit" tabindex="-1" name="submitItineraryRevert" class="revert" value="" title="Inverser l'itinéraire" />
          </td>
          
        </tr>
        <tr>
          
          <td class="tdFlag">
            
            <input id="arrival" name="arrival" class="flag red" title="Arrivée (Adresse, arrêt, lieu...)" type="text" value=""/>
            <input id="arrivalType" name="arrivalType" type="hidden" value=""/>
            <input id="arrivalCity" name="arrivalCity" type="hidden" value=""/>
            <input id="arrivalCityCode" name="arrivalCityCode" type="hidden" value=""/>
            <input id="arrivalCoordX" name="arrivalCoordX" type="hidden" value=""/>
            <input id="arrivalCoordY" name="arrivalCoordY" type="hidden" value=""/>    
            <input id="arrivalExternalCode" name="arrivalExternalCode" type="hidden" value=""/>
          </td>
          
          
          
          
          <td class="tdBtnActions">
            <input type="submit" tabindex="-1" name="submitFavoriteArrival" value="" class="submitFavoriteBtn" title="Sélectionner un favori pour l'arrivée" />
            <input type="submit" tabindex="-1" name="submitDistrictMapArrival" value="" class="withoutJS submitDistrictMapBtn" title="Afficher le Plan de quartier de l'arrivée" />
          </td>
          
          
        </tr>
      </table>
      <table class="dateItineraryForm">
        <tr class="label">
          <td>
            <h3>
              <label for="date">Date</label>
            </h3></td>
          <td>
            <h3>
               <label for="sens">Horaire</label>
            </h3></td>
        </tr>
        <tr class="formElements">
          <td>
            <div >
              
              
              <input id="date" name="date" class="inputDate" title="Date au format jj/mm/aaaa" type="text" value="23/09/2015"/>
              <input type="hidden" name="dateFormat" value="dd/MM/yyyy" />
            </div></td>
          <td>
            <div>
              <select id="sens" name="sens" class="comboHour">
                <option value="1" selected="selected">
                  Départ à
                </option>
                <option value="-1">
                  Arrivée à
                </option>
              </select>
              <select id="hour" name="hour" class="comboHour">
                
                  <option value="00">00</option>
                
                  <option value="01">01</option>
                
                  <option value="02">02</option>
                
                  <option value="03">03</option>
                
                  <option value="04">04</option>
                
                  <option value="05">05</option>
                
                  <option value="06">06</option>
                
                  <option value="07">07</option>
                
                  <option value="08">08</option>
                
                  <option value="09" selected="selected">09</option>
                
                
                  <option value="10">10</option>
                
                  <option value="11">11</option>
                
                  <option value="12">12</option>
                
                  <option value="13">13</option>
                
                  <option value="14">14</option>
                
                  <option value="15">15</option>
                
                  <option value="16">16</option>
                
                  <option value="17">17</option>
                
                  <option value="18">18</option>
                
                  <option value="19">19</option>
                
                  <option value="20">20</option>
                
                  <option value="21">21</option>
                
                  <option value="22">22</option>
                
                  <option value="23">23</option>
                
              </select>
              <span>h</span>
              <select id="min" name="min" class="comboHour">
                
                  <option value="00">00</option>
                
                  <option value="05" selected="selected">05</option>
                
                
                  <option value="10">10</option>
                
                  <option value="15">15</option>
                
                  <option value="20">20</option>
                
                  <option value="25">25</option>
                
                  <option value="30">30</option>
                
                  <option value="35">35</option>
                
                  <option value="40">40</option>
                
                  <option value="45">45</option>
                
                  <option value="50">50</option>
                
                  <option value="55">55</option>
                
              </select>
            </div></td>
        </tr>
      </table>
    </div>
    <div id="advanced" style="display: none;">
      <input id="moreCriterions" name="moreCriterions" type="hidden" value="false"/>
      <h2>
        <span class="label noIcon">Via
        </span> <a href="index.php?id=98&amp;tx_swordhelpers_pi1[tags]=tag_iti_search_transit&amp;L=0" target="_blank" class="stif_popup_webapp"> <img src="fileadmin/templates/STIF/images/help.png" alt="Afficher l'aide" title="Afficher l'aide" />
        </a>
      </h2>
      <div class="searchBlock">
        <table class="viaBlockTable">
          <tr>
            <td class="tdFlag">
                          
              
              <input id="via" name="via" class="flag yellow" title="Via (Arrêt)" type="text" value=""/>
              <input id="viaType" name="viaType" type="hidden" value=""/>
              <input id="viaCity" name="viaCity" type="hidden" value=""/>
              <input id="viaCityCode" name="viaCityCode" type="hidden" value=""/>
              <input id="viaExternalCode" name="viaExternalCode" type="hidden" value=""/>
              
              
              
            </td>
            <td class="tdBtnActions">
                          
              <input type="submit" tabindex="-1" name="submitDeleteVia" value="" class="submitDeleteBtn" title="Supprimer le via" />
              <input type="submit" tabindex="-1" name="submitFavoriteVia" value="" class="submitFavoriteBtn" title="Sélectionner un favori pour le via" />
              <input type="submit" tabindex="-1" name="submitDistrictMapVia" value="" class="withoutJS submitDistrictMapBtn" title="Afficher le Plan de quartier du via" />
              
              
            </td>
            </tr>
        </table>
      </div>
      <h2>
        <span class="label noIcon">Préférences
        </span> <a href="index.php?id=98&amp;tx_swordhelpers_pi1[tags]=tag_iti_search_preferences&amp;L=0" target="_blank" class="stif_popup_webapp"> <img src="fileadmin/templates/STIF/images/help.png" alt="Afficher l'aide" title="Afficher l'aide"/>
        </a>
      </h2>
      <div >
        <table class="verticalAlignTop">
          <tr>
            <td>
              <table class="transportMode">
                <tr>
                  <td>
                    
                    <input id="train1" name="train" type="checkbox" value="true" checked="checked"/><label for="train1">Train</label><input type="hidden" name="_train" value="on"/>
                  </td>
                  <td>
                    
                    <input id="rer1" name="rer" type="checkbox" value="true" checked="checked"/><label for="rer1">RER</label><input type="hidden" name="_rer" value="on"/>
                  </td>
                </tr>
                <tr>
                  <td>
                    
                    <input id="metro1" name="metro" type="checkbox" value="true" checked="checked"/><label for="metro1">Métro</label><input type="hidden" name="_metro" value="on"/>
                  </td>
                  <td>
                    
                    <input id="bus1" name="bus" type="checkbox" value="true" checked="checked"/><label for="bus1">Bus</label><input type="hidden" name="_bus" value="on"/>
                  </td>
                </tr>
                <tr>
                  <td colspan="2" class="tramTd">
                    
                    <input id="tram1" name="tram" type="checkbox" value="true" checked="checked"/><label for="tram1">Tramway & TZen</label><input type="hidden" name="_tram" value="on"/>
                  </td>
                </tr>
              </table></td>
            <td>
              <table class="walkingMode">
                <tr>
                  <td>
                      
                      <input id="walkSpeed1" name="walkSpeed" type="radio" value="2"/><label for="walkSpeed1">Bon marcheur</label>
                      <br class="clearBoth" />
                      
                      
                      <input id="walkSpeed2" name="walkSpeed" type="radio" value="1" checked="checked"/><label for="walkSpeed2">Marcheur normal</label>
                      <br class="clearBoth" />
                      
                      
                      <input id="walkSpeed3" name="walkSpeed" type="radio" value="0"/><label for="walkSpeed3">Marcheur avec difficultés</label>
                  </td>
                </tr>
              </table>
              </td>
          </tr>
        </table>
      </div>
    </div>
    <table width="100%">
      <tr>
        <td class="verticalAlignMiddle">
            <input type="submit" id="submitItineraryMoreCriterions" name="submitItineraryMoreCriterions" value="+ de critères de recherche" class="submitLink" title="Afficher la recherche avancée" />
           
        </td>
        <td align="right">
          <div class="txtAlignRight">
            
            <button id="submitSearchItinerary" type="submit" name="submitSearchItinerary" class="button btnSearch" title="Rechercher">
              <span><span><span>Rechercher</span>
              </span>
              </span>
            </button>
          </div>
        </td>
      </tr>
    </table>
    <input type="hidden" name="spcar" value="â" />
    <input type="hidden" name="hpx" value="1" />
    <input type="hidden" name="hat" value="1" />
    <input type="hidden" name="L" value="0" />
    <div class="clearBoth"></div>
  </form>
  
</div>

	</div>
	<div class="tx-swordinclude-pi1">
		





<script type="text/javascript">
<!--
$(document).ready(function() {
				initHiddenBlock();
				clearAllMaps();
				active("general");
				initAutoComplete("proximity", "/stif_web_carto/rest/searchPoints/");
				initTitleToInput("proximity");
				ajaxifyForm("proximitySearchForm", "contentProximity",
						"/stif_web_carto/comp/proximity/search.html",
						"<img  alt='chargement' src='fileadmin/templates/STIF/images/loader1.gif' />");
				loadPopupStifWebApp();
				setUpAjaxHeadersContext({"IncludeContext":"fr/itineraire-plan-de-quartier/?"});

				ajaxifyAnchor("proximityModifyAnchor", "contentProximity", "/stif_web_carto/comp/proximity/search.html", "<img alt='chargement' src='fileadmin/templates/STIF/images/loader1.gif' />");
				ajaxifyAnchor("proximityModifyAnchor", "contentItinerary", "/stif_web_carto/comp/itinerary/search.html", "<img alt='chargement' src='fileadmin/templates/STIF/images/loader1.gif' />");

					
});

//-->
</script>













<div id="contentProximity" class="includeContent">
  <h1 class="search">
    <span class="label">Transports à proximité </span> <a href="index.php?id=98&amp;tx_swordhelpers_pi1[tags]=tag_proximity_search&amp;L=0" target="_blank" class="stif_popup_webapp"> <img src="fileadmin/templates/STIF/images/help.png" alt="Afficher l'aide" title="Afficher l'aide"/> </a> <span
      class="clearBoth"
    ></span>
  </h1>
 
  <form id="proximitySearchForm" action="fr/itineraire-plan-de-quartier/?" method="get">
    <input type="hidden" name="id" value="14" />
    
    
      
      <input type="submit" class="inputHidden" tabindex="-1" name="submitSearchProximity" value="" />
      <div class="searchBlock">
      <table class="searchProximityTable verticalAlignTop">
        <tr>
          <td class="tdFlag">
            
            
            <input id="proximity" name="proximity" class="district" title="Localité (Commune, adresse, arrêt, lieu...)" type="text" value=""/>
            <input id="proximityType" name="proximityType" type="hidden" value=""/>
            <input id="proximityCity" name="proximityCity" type="hidden" value=""/>
            <input id="proximityExternalCode" name="proximityExternalCode" type="hidden" value=""/>   
            <input id="proximityCityCode" name="proximityCityCode" type="hidden" value=""/>
            <input id="proximityCoordX" name="proximityCoordX" type="hidden" value=""/>
            <input id="proximityCoordY" name="proximityCoordY" type="hidden" value=""/>
            
            
            
          </td>
          <td class="tdBtnActions">
            
            <input type="submit" tabindex="-1" name="submitFavoriteProx" value="" class="submitFavoriteBtn" title="Sélectionner un favori pour la recherche de proximité" />
            
            
          </td>
        </tr>
      </table>

    </div>
    <div class="txtAlignRight">
	    
      <button id="submitSearchProximity" type="submit" name="submitSearchProximity" class="button btnSearch" title="Rechercher">
        <span><span><span>Rechercher</span> </span> </span>
      </button>
    </div>
    <input type="hidden" name="spcar" value="â" />
    <input type="hidden" name="hit" value="1" />
    <input type="hidden" name="hat" value="1" />
    <input type="hidden" name="L" value="0" />
    <div class="clearBoth"></div>
  </form>

</div>

	</div>
	<div class="infosTrafic"><div class="entete"><h1>Actualités trafic</h1></div>
<div class="backToList"><a href="fr/actualites-trafic/">Toutes les actualités</a></div>

<div class="actu">	
	<div><span class="newsDate">08h40</span><img src="fileadmin/templates/STIF/images/news.impact.orange.png" width="24" height="24" border="0" alt="Non bloquant" title="Non bloquant" /> <img src="fileadmin/templates/STIF/picto_mode_24/RER.png" width="24" height="24" border="0" alt="RER" title="RER" /><img src="fileadmin/templates/STIF/picto_ligne_24/800_E.png" width="24" height="24" border="0" alt="E" title="E" /><h2><a href="fr/actualites-trafic/detail-actualite-vianavigo-vos-transports-en-commun-en-ile-de-france-optile-ratp-sncf/article/rer-e-haussmann-chelles-gournay-21-sept-au-02-oct-3/" title="RER E: Haussmann-Chelles Gournay 21 sept au 02 oct">RER E: Haussmann-Chelles Gournay 21 sept au 02 oct</a></h2><hr class="clear"/></div>
	
	<hr class="clear"/>
</div>

<div class="actu">	
	<div><span class="newsDate">06h00</span><img src="fileadmin/templates/STIF/images/news.impact.orange.png" width="24" height="24" border="0" alt="Non bloquant" title="Non bloquant" /> <h2><a href="fr/actualites-trafic/detail-actualite-vianavigo-vos-transports-en-commun-en-ile-de-france-optile-ratp-sncf/article/ligne-r-parismontereau-montargis-1509-au-0211-4/" title="Ligne R: Paris/Montereau-Montargis 15/09 au 02/11">Ligne R: Paris/Montereau-Montargis 15/09 au 02/11</a></h2><hr class="clear"/></div>
	
	<hr class="clear"/>
</div>

<div class="actu">	
	<div><span class="newsDate">00h00</span><img src="fileadmin/templates/STIF/images/news.impact.orange.png" width="24" height="24" border="0" alt="Non bloquant" title="Non bloquant" /> <img src="fileadmin/templates/STIF/picto_mode_24/Metro.png" width="24" height="24" border="0" alt="Metro" title="Metro" /><img src="fileadmin/templates/STIF/picto_ligne_24/100110002_2.png" width="24" height="24" border="0" alt="2" title="2" /><h2><a href="fr/actualites-trafic/detail-actualite-vianavigo-vos-transports-en-commun-en-ile-de-france-optile-ratp-sncf/article/metro-2-travaux-sur-les-voies/" title="Métro 2 Travaux sur les voies :">Métro 2 Travaux sur les voies :</a></h2><hr class="clear"/></div>
	
	<hr class="clear"/>
</div>

</div><script type="text/javascript">
<!--
xtnv = document;        //parent.document or top.document or document         
xtsd = "http://logi242";
xtsite = "492122";
xtn2 = "1";        // level 2 site ID
xtpage = "RITI::::Itineraire_Plan_de_quartier";        //page name (with the use of :: to create chapters)
xtdi = "";        //implication degree
xt_multc = "";              //all the xi indicators (like "&x1=...&x2=....&x3=...")
xt_an = "";        //user ID
xt_ac = "";        //category ID
//do not modify below
if (window.xtparam!=null){window.xtparam+="&ac="+xt_ac+"&an="+xt_an+xt_multc;}
else{window.xtparam="&ac="+xt_ac+"&an="+xt_an+xt_multc;};
//-->
</script>
<script type="text/javascript" src="fileadmin/templates/STIF/js/xtcore.js"></script>
<noscript>
<img width="1" height="1" alt="" src="http://logi242.xiti.com/hit.xiti?s=492122&amp;s2=1&amp;p=RITI::::Itineraire_Plan_de_quartier&amp;di=&amp;an=&amp;ac=" />
</noscript><!--TYPO3SEARCH_end--></div>
			
		</div>
		<div id="rightCol">
			<div class="menu1">
				<ul><li class="first"><a href="fr/titres-et-tarifs/tous-les-titres-de-transports/">Titres et tarifs</a></li><li><a href="fr/vos-transports-mode-demploi/presentation-du-reseau/">Vos transports, mode d'emploi</a></li><li class="last"><a href="fr/actualites-trafic/">Actualités trafic</a></li></ul>
				<hr class="clear" />
			</div>
			<div id="rightContent"><!--TYPO3SEARCH_begin--><div class="tx-swordinclude-pi1">
		





<script type="text/javascript">
<!--
var popup;

function identification(target, evt) {
	var map = getMapByTarget(target);
	var vectorLayer = getVectorLayerByTarget(target);
	var markerLayer = getMarkerLayerByTarget(target);
	var isSchema = isSchemaMap(target);
	var isItineraire = isItineraireMap(target);
	
    //masque une popup precedente
    hidePopup();
		
    var lonlat = map.getLonLatFromViewPortPx(evt.xy);
    var X = lonlat.lon;
    var Y = lonlat.lat;
    var zoom = map.zoom;
    var resolution = map.getResolution();
    var typeMap;
    if (isSchema && isItineraire) {
        typeMap = 1; //Itineraire schematique
    } else if (isSchema) {
        typeMap = 0; //PlanGeneral
    } else {
    	typeMap = 2; //Carto
    }
    
    // C'est un itineraire, on regarde si un objet vecteur est sous le click
    if (isItineraire) {
    	var feature = vectorLayer.getFeatureFromEvent(evt);
    	if (feature) {
    		if (!isEmpty(feature.data) && !isEmpty(feature.data.lineEC) && !isEmpty(feature.data.modeEC)) {
    			var params = feature.data.lineEC + "/" +feature.data.modeEC; 
    			$.getJSON("/stif_web_carto/rest/identifyItineraryLine/" + params,  function(data) {        		
    				if (!isEmpty(data)) {
    					var linePopup = data.LinePopup;
    					//Ajout information bus
    	    			if (!isEmpty(feature.data.lineCode)) {
    	    				linePopup.lineCode = feature.data.lineCode;
    	    				linePopup.direction = feature.data.direction;
    	    				linePopup.date = feature.data.date;
    	    			}
						var popup_info = getHtmlLine(linePopup, true, true, 0);
						//Affichage
						showPopup(map,lonlat,popup_info);
    				}
    			});
    			return;
    		}
    	}
    }

    //Cherche les objets
    $.getJSON("/stif_web_carto/rest/identify/" + X + "/" + Y + "/" + typeMap + "/" + zoom +  "/" + resolution,  function(data) {
    	if(data && data.list.length>=1)
    	{
    		var popup_info = "";
    		var isUnique = data.list.length == 1;
    		var first = data.list[0];
    		if (first.isLine) {
        		$.each(data.list, function(i,line){
        			popup_info += getHtmlLine(line, false, isUnique, i);
        		});
    		}
    		else {
        		$.each(data.list, function(i,point){
        			popup_info += getHtmlPoint(point, isSchema, false, false, isUnique, i);
        		});
    		}
    		//Affichage
    		showPopup(map,lonlat,popup_info);
    		
    		//s'il s'agit d'une Station (unique)
			if (first.isStation && isUnique && !isSchema) {
				popupStationProxOpened();	
			}
    	}
    });
}

function identificationMarkerFunction(evt) {
	if (!isEmpty(this) && !isEmpty(this.data) && !isEmpty(this.data.stopPointEC) && !isEmpty(this.data.modeEC)) {
		OpenLayers.Event.stop(evt);
		
		var map = this.marker.map;
		
		if (map.getControlsByClass('OpenLayers.Control.ClickMapControl')[0].active) {
			var lonlat = this.marker.lonlat;
			var stopPointEC = this.data.stopPointEC;
			var modeEC = this.data.modeEC;
			var isSchema = !!this.data.isSchema;
			var isIti = !!this.data.isIti;
			var isBeginArrivalVia = !!this.data.isBeginArrivalVia;
			
		    var typeMap;
		    if (isSchema && isIti) {
		        typeMap = 1; //Itineraire schematique
		    } else if (isSchema) {
		        typeMap = 0; //PlanGeneral
		    } else {
		    	typeMap = 2; //Carto
		    }
			
			//Cherche la station (itinéraire ou point sélectionné de la proximité)
		    $.getJSON("/stif_web_carto/rest/identifyItineraryPoint/" + stopPointEC + "/" +modeEC + "/" + typeMap,  function(data) {  
		    	if(!isEmpty(data))
		    	{
		    		var popup_info = getHtmlPoint(data.StationPopup, isSchema, isIti, isBeginArrivalVia, true, 0);
		    		showPopup(map,lonlat,popup_info);
		    		if (!isSchema && !isIti) {
		    			popupStationProxOpened();
		    		}
		    	}
			});
		}
	}
}

function showPopup(map,lonlat,popupInfo) {	
	hidePopup();

	popupInfo = popupInfo.replace(/popup_mem/g, "stif_popup_webapp popup_mem");

	popup = new OpenLayers.Popup.Anchored("Infos",lonlat, new OpenLayers.Size(100,100),popupInfo, {size: new OpenLayers.Size(0,0), offset: new OpenLayers.Pixel(0,0)}, true, onPopupClose);
	popup.border = 10;
	popup.autoSize = true;
	popup.panMapIfOutOfView = true;
	popup.keepInMap = true;  
	popup.fixedRelativePosition= true;
	  
	map.addPopup(popup);
	loadPopupStifWebApp();
}

function onPopupClose(){
	hidePopup()
}

function hidePopup() {
	if (popup != null) 
	{
	    popup.map.removePopup(popup);
	    popup = null;
	    
	 	// Si proximité, appel a  la fonction pour enlever la mise en évidence des lignes dans la zone de contenu
		if ($("#proximity_result").is(':visible'))
		{
			unSelectAllLines();
		}
	}
}

function getHtmlPoint(point, isSchema, isOnItineraire, isBeginArrivalVia, isUnique, num)
{
	var popup_info = "";	
	var regexPattern =new RegExp("'", "g");
	sLabelNavitia = point.labelNavitia.replace(regexPattern,"&#39;");	
	sCityNavitia = point.cityNavitia.replace(regexPattern,"&#39;");
	var isStationProx = point.isStation && !isSchema && !isOnItineraire;

	if (!isUnique) {
		var id="Popup" + num;
		
		// Lien de sélection du fils
		popup_info += "<a href='javascript:popupSelected(" + num + "," + isStationProx + ")'>";
		
		//Titre en mode multiple
		popup_info += getHtmlPointHead(point, false);
		
		popup_info += "</a>";
		
		//Id popup + hidden
		popup_info += "<div id='" + id + "' style='display:none' >";
	}
	
	//Titre
	popup_info += getHtmlPointHead(point,true);

	//Détail
	popup_info += "<div class='olPopupDetail' >";

	if (point.isStation || point.isPOI || point.isAddress) {
		popup_info += "<div class='olPopupPictos clearfix'>";
		var nbBus = 0;
		var maxBusPrint = "5";
		//Lignes
		if (point.lines != null) {
			var htmlRail ="";
			var htmlBus ="";
			var isRail = false;
			var currentMode = "";
			
			$.each(point.lines, function(i,line){
				if (isStationProx) {
					popup_info += "<div name='popup_lineEC' id='" + line.lineEC + "' style='display:none'></div>";
				}
				if (line.isBus == true) {
					if(point.nbLineBus <= maxBusPrint){
						//nbBus++;
						if (currentMode != line.modeEC) {
							if (currentMode != "") {
								htmlRail = htmlRail + "</div>"; // Fin d'un mode
							}
							//Affiche le mode quand il change
							currentMode = line.modeEC;
							if(isRail){
								htmlRail = htmlRail + "<br/>";
							}
							htmlRail = htmlRail + "<div style='clear:left;'>";
							htmlRail = htmlRail + "<img src='" + getImageMode(line.modeEC) + "' />";
						}
	
						if(line.lineCode.length >6) {
							htmlRail = htmlRail + "<div style='margin-left:1px;' class='pictoBus16_short'><p>" + line.lineCode + "</p></div>";
						}else if(line.lineCode.length >6) {
							htmlRail = htmlRail + "<div style='margin-left:1px;' class='pictoBus16_medium'><p>" + line.lineCode + "</p></div>";
						}else{
							htmlRail = htmlRail + "<div style='margin-left:1px;' class='pictoBus16_large'><p>" + line.lineCode + "</p></div>";
						}

					}
				}
				else{
					isRail = true;
					if (currentMode != line.modeEC) {
						if (currentMode != "") {
							htmlRail = htmlRail + "</div>"; // Fin d'un mode
						}
						//Affiche le mode quand il change
						currentMode = line.modeEC;
						htmlRail = htmlRail + "<div>";
						htmlRail = htmlRail + "<img src='" + getImageMode(line.modeEC) + "' />";
					}
					htmlRail = htmlRail + "<img src='" + getImageLine(line.lineEC) + "' />";
				}
			});
			if (currentMode != "") {
				htmlRail = htmlRail + "</div>"; // Fin d'un mode
				popup_info += "<div class='popupRail clearfix'>" + htmlRail + "</div>";
			}
		}
		
		//Bus et proximités
		popup_info += "<div class='popupProximityBus clearfix'>";
		if (point.nbLineBus > 0 && point.nbLineBus > maxBusPrint ) {
			popup_info += "<span>" + point.nbLineBus + " Bus " + "</span></br>";
		}
	
		if(point.isPOI){
			popup_info += "<a href='javascript:proximitySearch(\"" + sLabelNavitia + "\",\"" + sCityNavitia + "\",\"" + point.pointType+ "\",\"" + point.externalCode + "\")'><span>Liste des transports </span></a>";
		}else{
			popup_info += "<a href='javascript:proximitySearch(\"" + sLabelNavitia + "\",\"" + sCityNavitia + "\",\"" + point.pointType+ "\",\"" + point.externalCode + "\")'><span> Liste des transports </span> </a>";
		}
		
		
		popup_info += "</div>"
	
		popup_info += "</div>";
	}
	
	if (!isBeginArrivalVia) {
    	//Actions itinéraire
    	popup_info += "<div class='olPopupActionItinerary clearfix'>";

    	if(point.isAddress){
    		//départ
    		popup_info += "<a class='flag green' href='javascript:actionItineraireInfobulle(1,\"" + sLabelNavitia + "\",\"" + sCityNavitia + "\",\"" + point.pointType + "\",\"" + point.coordX + "\",\"" +  point.coordY + "\")'>Départ</a>";
    		//arrivée
    		popup_info += "<a class='flag red' href='javascript:actionItineraireInfobulle(2,\"" + sLabelNavitia +  "\",\"" + sCityNavitia + "\",\"" + point.pointType + "\",\"" + point.coordX + "\",\"" +  point.coordY + "\")'>Arrivée</a>";
    	}else if (point.isPOI) {
     		//départ
    		popup_info += "<a class='flag green' href='javascript:actionItineraireStationPOIInfobulle(1,\"" + sLabelNavitia + "\",\"" + sCityNavitia + "\",\"" + point.pointType+ "\",\"" + point.externalCode  + "\")'>Départ</a>";
    		//arrivée
    		popup_info += "<a class='flag red' href='javascript:actionItineraireStationPOIInfobulle(2,\"" + sLabelNavitia +  "\",\"" + sCityNavitia + "\",\"" + point.pointType+ "\",\"" + point.externalCode  + "\")'>Arrivée</a>";
 
    	}
    	else{
       		//départ
    		popup_info += "<a class='flag green' href='javascript:actionItineraireStationPOIInfobulle(1,\"" + sLabelNavitia + "\",\"" + sCityNavitia + "\",\"" + point.pointType+ "\",\""  + point.externalCode  + "\")'>Départ</a>";
    		//arrivée
    		popup_info += "<a class='flag red' href='javascript:actionItineraireStationPOIInfobulle(2,\"" + sLabelNavitia +  "\",\"" + sCityNavitia + "\",\"" + point.pointType+ "\",\"" + point.externalCode  + "\")'>Arrivée</a>";
        	
    	}

    	if (point.isStation) {
    		//Via : pour les arrêts
    		popup_info = popup_info
    			+ "<a class='flag yellow' href='javascript:actionItineraireStationPOIInfobulle(3,\"" + sLabelNavitia +  "\",\"" + sCityNavitia + "\",\"" + point.pointType + "\")'>Via</a>";
    				
    		if (isOnItineraire && point.isStation) {
    			//Eviter : pour les arrêts de l'itinéraire
    			popup_info = popup_info
    				+ "<a class='flag avoid' class='flag red' href='javascript:actionItineraireInfobulle(4,\"" + point.stopPointEC + "\")'>Eviter</a>";
    		}
    	}
    	popup_info +="</div>"; //Fin actions itineraires
	}
	
	if (isSchema) {
		//Plan de quartier
		popup_info += "<div class='olPopupDistrictPlan clearfix'>" 
			+ "<a class='districtMap' href='javascript:displayDistrict(" + parseFloat(point.coordX) + "," + parseFloat(point.coordY) + ")'>Plan de quartier</a>"
			+ "</div>"; 
	}
	//Favoris
	popup_info += "<div class='olPopupFavoriteStation clearfix'>"
	if (point.isStation) {
		popup_info += "<a class='favorite popup_mem' target='_blank' href='/stif_web_carto/comp/favorite/addPoint.html?code=" + point.stopAreaEC + "&L=0'>";
	} else if (point.isPOI) {
		popup_info += "<a class='favorite popup_mem' target='_blank' href='/stif_web_carto/comp/favorite/addSite.html?code=" + point.externalCode + "&L=0'>";	
	} else if (point.isAddress) {
		realName = point.name.replace(regexPattern,"&#39;");
		popup_info += "<a class='favorite popup_mem' target='_blank' href='/stif_web_carto/comp/favorite/addAddress.html?name=" + realName + "&city=" + sCityNavitia + "&L=0&spcar=â'>";
	}
	popup_info += "Favoris</a></div>"; 

	popup_info += "</div>"; //Fin Détail
	
	if (!isUnique) {
		popup_info += "</div>"; //Fin Id
	}
	
	return popup_info;
}

function getHtmlPointHead(point, isUnique) {
	var popup_info="";
	if (isUnique) {
		popup_info += "<div class='olPopupHead clearfix'>";
	} else {
		popup_info += "<div class='olPopupHeads clearfix'>";
	}
	popup_info +=  "<span>" + point.label + "</span>";
	
	
	if (point.isStation) {
		if (!isEmpty(point.infoTrafic)) {
			popup_info += "<div class='floatRight pictoItStation'>";
			if (isUnique) {
				//lien uniquement s'il n'y qu'un arret
				popup_info += "<a class='popup_mem' href='/stif_web_carto/comp/at/detailedInfosAT.html?tcotype=StopPoint&tcoext="+ point.stopPointEC + "&L=0' target='_blank'>";
			}
			popup_info += "<img src='fileadmin/templates/STIF/images/" + getInfoTraficImage(point.infoTrafic.type) + "' alt='' title='" + point.infoTrafic.title + "' />";
			if (isUnique) {
				popup_info += "</a>"
			}
			popup_info += "</div>"
		}
	}
	
	popup_info += "</div>"; //Fin Head
	
	return popup_info;
}

function getHtmlLine(line, isOnItineraire, isUnique, num) {
	var popup_info = "";

	if(line.modeEC == "TER" ){
		return "";
	}

	var id="Popup" + num;
	var idDetail="PopupDetail" + num;

	//afficahge multiple
 	if (!isUnique) {
 		var id="Popup" + num;
		
		//Titre en mode multiple
 		popup_info += getHtmlLineHead(line, false, num);
		
		//Id popup + hidden
 		popup_info += "<div id='"+id+"' style='display:none' >";
 	}
	

	//Titre
	popup_info += getHtmlLineHead(line, true, num);

	//Détail
	popup_info += "<div class='olPopupDetail' >";

	
	if (isOnItineraire) {
		//Eviter
		popup_info += "<div class='olPopupActionItinerary clearfix'>"
				+ "<a class='flag avoid' href='javascript:actionItineraireInfobulle(5,\"" + line.lineEC + "\");'>Eviter</a>"
				+ "</div>"; 
	}
	
	//FHP
	var urlFHP = getUrlFHP(line.lineEC,line.modeEC, line.direction, line.date);
	if (!isEmpty(urlFHP)) {
		popup_info += "<div class='olPopupClock clearfix'>"
			+ "<a class='clock' href='" + urlFHP + "' target='_blank' onclick='hidePopup();'>Horaires et plans</a>"
			+ "</div>"; 
	}
	//Favoris
	if(line.modeEC != "TER" ){
		popup_info += "<div class='olPopupFavoriteLine clearfix'>" 
			+ "<a class='favorite popup_mem' href='/stif_web_carto/comp/favorite/addLine.html?code=" + line.lineEC + "&L=0' target='_blank'>Favoris</a>"
			+ "</div>"; 
	}
	popup_info += "</div>"; //Fin détail
	
 	if(!isUnique) {
 		popup_info += "</div>"; //Fin Id popup
 	}
	return popup_info;
}

function getHtmlLineHead(line, isUnique, num) {
	var popup_info="";

	if(line.modeEC == "TER" ){
		return "";
	}
	
	if (isUnique) {
		popup_info += "<div class='olPopupHead clearfix'>";
	} else {
		popup_info += "<div class='olPopupHeads clearfix'>";
	}
	
	popup_info += "<div class='olPopupPictos clearfix'><div>"; //Picto mode\ligne
	
	popup_info += "<div>";
	
	//afficahge multiple
 	if (!isUnique) {
 		popup_info += "<a href='javascript:popupSelected(" + num + ",false)'>";
 	}
	
	popup_info += "<img src='" + getImageMode(line.modeEC) + "' />";
	if(!line.isBus) { 
		popup_info += "<img src='" + getImageLine(line.lineEC) + "' />";
	}
	else {
		//Cas du bus
		if (line.lineCode.length > 6)	{
			popup_info += "<div class='pictoBus16_short'>";
		}
		else if (line.lineCode.length > 3)	{
			popup_info += "<div class='pictoBus16_medium'>";
		}
		else {
			popup_info += "<div class='pictoBus16_large'>";
		}
		
		popup_info += "<p>" + line.lineCode + "</p></div>" ;
	}
	
	//afficahge multiple
 	if (!isUnique) {
 		if (!isEmpty(line.infoTrafic)) {
 			popup_info += "<img src='fileadmin/templates/STIF/images/" + getInfoTraficImage(line.infoTrafic.type) + "' alt='Information trafic' title='" + line.infoTrafic.title + "' />";
 		}
 		popup_info += "</a>";
 	}
	
	popup_info += "</div>";
	
	//InfoTrafic
	if (!isEmpty(line.infoTrafic)) {
		if (isUnique) {
    		popup_info += "<div class='floatRight'>";
    		popup_info += "<a class='popup_mem' href='/stif_web_carto/comp/at/detailedInfosAT.html?tcotype=Line&tcoext="+ line.lineEC + "&L=0' target='_blank'>";
    		popup_info += "<img src='fileadmin/templates/STIF/images/" + getInfoTraficImage(line.infoTrafic.type) + "' alt='Information trafic' title='" + line.infoTrafic.title + "' />";
    		popup_info += "</a></div>";
		}
	}
	popup_info += "</div></div>"; //Pictos premiere ligne	
	popup_info += "</div>"; //	Head
	
	return popup_info; 
}

function popupSelected(num, isStationProx) {
	var id="#Popup" + num;
	
	var map = popup.map;
	var lonlat = popup.lonlat;
	
	showPopup(map,lonlat,$(id).html());
	
	if (isStationProx) {
		popupStationProxOpened();
	}
}

function popupStationProxOpened(){
	//Si proximité, appel a  la fonction de mise en évidence des lignes dans la zone de contenu
	if ($("#proximity_result").is(':visible'))
	{
		$('div[name="popup_lineEC"]').each(function(index,value) {
			var lineEC = value.id.replace(":","_");
			selectLine(lineEC);
		});
	}
}

function proximitySearch(labelNavitia,cityNavitia, type,externalCode, coordX, coordY) {
	hidePopup();

	posX = '';
	posY = '';
	
	if (!isEmpty(coordX)) {
		posX = coordX;
		posY = coordY;
	}
	
	if ($("#itinerary1Tab").is(':visible'))
	{
		fancyconfirm("<p class='info_message'>Vous allez être redirigé sur la page de recherche à proximité. Le résultat de votre recherche d'itinéraire sera perdu. Souhaitez-vous continuer ?</p>", "Ok", "Annuler", function () {searchProximity(labelNavitia, cityNavitia, type,externalCode,posX,posY);}, null);
	}else{
		searchProximity(labelNavitia, cityNavitia, type,externalCode,posX,posY);
	}
}

function actionItineraireInfobulle(numAction,critere,city,pointType, coordX,coordY,pointExternalCode) {
	hidePopup();
	
	if (numAction == 1) {
		setDeparture(critere, city, pointType,coordX,coordY,pointExternalCode);
	}
	else if (numAction == 2) {
		setArrival(critere, city, pointType,coordX,coordY,pointExternalCode);
	}
	else if (numAction == 3) {
		setVia(critere, city, pointType);
	}
	else if (numAction == 4) {
		addEvictPoint(critere, 3, "Vous avez atteint la limite maximum du nombre de lignes ou lieux à éviter pour une même recherche d'itinéraire.");
	}
	else if (numAction == 5) {
		addEvictLine(critere, 5, "Vous avez atteint la limite maximum du nombre de lignes ou lieux à éviter pour une même recherche d'itinéraire.");
	}
}


function actionItineraireStationPOIInfobulle(numAction,critere,city,pointType,pointExternalCode) {
	hidePopup();
	
	if (numAction == 1) {
		setDeparture(critere, city, pointType,'','',pointExternalCode);
	}
	else if (numAction == 2) {
		setArrival(critere, city, pointType,'','',pointExternalCode);
	}
	else if (numAction == 3) {
		setVia(critere, city, pointType);
	}
	else if (numAction == 4) {
		addEvictPoint(critere, 3, "Vous avez atteint la limite maximum du nombre de lignes ou lieux à éviter pour une même recherche d'itinéraire.");
	}
	else if (numAction == 5) {
		addEvictLine(critere, 5, "Vous avez atteint la limite maximum du nombre de lignes ou lieux à éviter pour une même recherche d'itinéraire.");
	}
}


function displayDistrict(X, Y) {
	hidePopup();
	var zoom = "3";
	districtMap.setCenter(new OpenLayers.LonLat(X, Y), 1);
	districtMap.zoomTo(zoom);
	active("district");
}

function getImageLine(externalCode) {
	return "fileadmin/templates/STIF/picto_ligne_16/" + externalCode.replace(":","_") + ".png";
}

function getImageMode(externalCode) {
	return "fileadmin/templates/STIF/picto_mode_16/" + externalCode + ".png";
}

function getInfoTraficImage(type) {
	var imageName;
    if (type==3) {
		imageName = "news.impact.red16.png";
	} else if (type==2) {
		imageName = "news.impact.orange16.png";
	} else if (type==1) {
		imageName = "news.impact.green16.png";
	} else {
		imageName = "news.info16.png";
	}
	return imageName;
}

function getUrlFHP(lineEC, modeEC, direction, date) {
	var url = "http://www.vianavigo.com/fr/horaires-plans-de-lignes/";
	
	if (modeEC == "TER") {
		return "";
	}
	
	if (modeEC == "Bus") {
		url = url + "buscar";
	} else if (modeEC == "Metro" || modeEC == "Navette" ) {
		url = url + "metro";
	}  else if (modeEC == "Tramway" ) {
		url = url + "tramtzen";
	} else if (modeEC == "TZen" ) {
		url = url + "tramtzen";
	} else if (modeEC == "Train" || modeEC == "RER" ) {
		url = url + "trainrer";
	} else {
		url = "";
	}
	
	if (modeEC == "Bus") {
		url = url + "?selectedBusLineExternalCode=" + lineEC + "&L=0&sens=1&date=" + date.replace(/_/g,"/");
	}
	else {
		url = url + "?selectedLineExternalCode=" + lineEC + "&L=0";
	}
	
	return url;
}
//-->
</script>

<script type="text/javascript">
<!--
function helpCarto(target, version) {
	version = version || "";
	var mapId, mapHelpId, mapHelpCloseId, msg;
	if (target == "general") {
		mapId = "map-1";
		mapHelpId = "map-1_help";
		mapHelpCloseId = "map-1_help_close";
		msg = "<h1>Par la carte, c'est facile !</h1><h2>Zoomez sur le plan pour :</h2><p>- définir un itinéraire,<br/>- accéder aux horaires de ligne,<br/>- visualiser un plan de quartier.</p>";
    } else if (target == "itinerary1") {
    	mapId = "map-2";
		mapHelpId = "map-2_help";
		mapHelpCloseId = "map-2_help_close";
		if (version == "choice") {
			msg = "<h1>Par la carte, c'est facile !</h1><p>Passez votre curseur sur l'un des trajets de la liste pour visualiser l'itinéraire correspondant.</p>";
		} else if (version == "show") {
			msg = "<h1>Par la carte, c'est facile !</h1><h2>Cliquez sur une étape pour :</h2><p>- modifier votre itinéraire,<br/>- visualiser un plan de quartier,<br/>- vérifier les transports à proximité.</p>";
		} else {
			return;
		}
    } else if (target == "itinerary2") {
    	mapId = "map-3";
		mapHelpId = "map-3_help";
		mapHelpCloseId = "map-3_help_close";
		if (version == "choice") {
			msg = "<h1>Par la carte, c'est facile !</h1><p>Passez votre curseur sur l'un des trajets de la liste pour visualiser l'itinéraire correspondant.</p>";
		} else if (version == "show") {
			msg = "<h1>Par la carte, c'est facile !</h1><h2>Cliquez sur une étape pour :</h2><p>- modifier votre itinéraire,<br/>- visualiser un plan de quartier,<br/>- vérifier les transports à proximité.</p>";
		} else {
			return;
		}
	} else if (target == "step") {
		mapId = "map-4";
		mapHelpId = "map-4_help";
		mapHelpCloseId = "map-4_help_close";
		msg = "<h1>Par la carte, c'est facile !</h1><h2>Cliquez sur un arrêt pour :</h2><p>- définir un nouvel itinéraire,<br/>- vérifier les transports à proximité.</p>";
	} else if (target == "district") {
		mapId = "map-5";
		mapHelpId = "map-5_help";
		mapHelpCloseId = "map-5_help_close";
		msg = "<h1>Par la carte, c'est facile !</h1><h2>Cliquez sur le plan pour :</h2><p>- définir un itinéraire,<br/>- accéder aux horaires de ligne.</p>";
	} else {
		return;
	}
	
	$("#" + mapHelpId).remove();
	var cookieName = mapHelpId + "_" + version + "_close";
	if ($.cookie(cookieName) == 1) {
		return;
	}	
	$("#" + mapId).append("<div id='"+mapHelpId+"' style='position: absolute; overflow: hidden; left: 360px; top: 406px; background-color: white; opacity: 1; width: 190px; height: 90px; z-index: 1050;' class='olPopup help'>" + msg + "</div>");
	$("#" + mapHelpId).append("<div id='"+mapHelpCloseId+"' style='width: 17px; height: 17px; position: absolute; right: 0px; top: 0px;' class='olPopupCloseBox'></div>");
	$("#" + mapHelpCloseId).click(function() {
		var d = new Date();
		d.setTime(d.getTime() + 800000000000);
		$.cookie(cookieName, "1", {expires : d, path: '/'});
		$("#" + mapHelpId).hide("slide",{direction:"down"},"normal");
		return false;
	});
	$("#" + mapHelpId).click(function() {return false;});
}
//-->
</script>


<script type="text/javascript">
<!--
    var generalMap, itinerary1Map, itinerary2Map, stepMap, districtMap;
    var itinerary1VectorLayer, itinerary2VectorLayer, stepVectorLayer, districtVectorLayer;
    var itinerary1MarkerLayer, itinerary2MarkerLayer, stepMarkerLayer, districtMarkerLayer;
    var maps_tab = null;
    $(document).ready(function() {

        maps_tab = $("#map").tabs({
            select: function(event, ui) {
                hidePopup();
                return true;
            }
        });
        $("#map").show();

        loadPopupStifWebApp();

        setImagePathMap("fileadmin/templates/STIF/images/");

        //
        // CARTE GENERALE
        // 
        addMap("map-1", true, false, false, new Array(-7.45,-12.90,725.5,645), "BASE", "/stif_web_carto/rest/agsServices/rest/services/SCHEMA/MapServer/", function(map, baseLayer) {
            generalMap = map;
            centerMap(generalMap, 354,313, 0);
            var clickEvt = new OpenLayers.Control.ClickMapControl(function(e) {
                identification("general", e);
            });
            generalMap.addControl(clickEvt);
            clickEvt.activate();
            helpCarto("general");
        });

        // 
        // CARTE ITINERAIRE 1
        //
        addMap("map-2", true, false, false, new Array(-7.45,-12.90,725.5,645), "BASE", "/stif_web_carto/rest/agsServices/rest/services/SCHEMA/MapServer/", function(map, baseLayer) {
            itinerary1Map = map;
            baseLayer.setOpacity(0.15);
            itinerary1VectorLayer = addVectorLayer(itinerary1Map, "Vector");
            itinerary1MarkerLayer = addMarkerLayer(itinerary1Map, "Marker");
            itinerary1Map.events.on({"zoomend": function() {
                    moveText("itinerary1");
                }});
            var clickEvt = new OpenLayers.Control.ClickMapControl(function(e) {
                identification("itinerary1", e);
            });
            itinerary1Map.addControl(clickEvt);
            clickEvt.activate();
            helpCarto("itinerary1");
        });

        //
        // CARTE ITINERAIRE 2 
        //    
        addMap("map-3", true, true, true, new Array(500000, 2300000, 700000, 2500000), "BASE", "/stif_web_carto/rest/agsServices/rest/services/GEO/MapServer/", function(map, baseLayer) {
            itinerary2Map = map;
            baseLayer.setOpacity(0.40);
            addAgsTiledLayer(itinerary2Map, "BUS", "/stif_web_carto/rest/agsServices/rest/services/GEO_BUS/MapServer/", function(map, layer) {
                layer.setOpacity(0.40);

                itinerary2VectorLayer = addVectorLayer(itinerary2Map, "Vector");
                itinerary2MarkerLayer = addMarkerLayer(itinerary2Map, "Marker");
                var clickEvt = new OpenLayers.Control.ClickMapControl(function(e) {
                    identification("itinerary2", e);
                });
                itinerary2Map.addControl(clickEvt);
                clickEvt.activate();
                helpCarto("itinerary2");
            });
        });

        //  
        // CARTE D'ETAPE  
        //     
        addMap("map-4", true, true, true, new Array(500000, 2300000, 700000, 2500000), "BASE", "/stif_web_carto/rest/agsServices/rest/services/GEO/MapServer/", function(map, baseLayer) {
            stepMap = map;
            baseLayer.setOpacity(0.70);
            addAgsTiledLayer(stepMap, "BUS", "/stif_web_carto/rest/agsServices/rest/services/GEO_BUS/MapServer/", function(map, layer) {
                layer.setOpacity(0.70);

                stepVectorLayer = addVectorLayer(stepMap, "Vector");
                stepMarkerLayer = addMarkerLayer(stepMap, "Marker");
                var clickEvt = new OpenLayers.Control.ClickMapControl(function(e) {
                    identification("step", e);
                });
                stepMap.addControl(clickEvt);
                clickEvt.activate();
                helpCarto("step");
            });
        });

        //  
        // CARTE DE QUARTIER 
        //     
        addMap("map-5", true, true, true, new Array(500000, 2300000, 700000, 2500000), "BASE", "/stif_web_carto/rest/agsServices/rest/services/GEO/MapServer/", function(map, baseLayer) {
            districtMap = map;
            baseLayer.setOpacity(1);
            addAgsTiledLayer(districtMap, "BUS", "/stif_web_carto/rest/agsServices/rest/services/GEO_BUS/MapServer/", function(map, layer) {
                layer.setOpacity(1);

                districtVectorLayer = addVectorLayer(districtMap, "Vector");
                districtMarkerLayer = addMarkerLayer(districtMap, "Marker");
                var clickEvt = new OpenLayers.Control.ClickMapControl(function(e) {
                    identification("district", e);
                });
                districtMap.addControl(clickEvt);
                clickEvt.activate();
                helpCarto("district");
            });
        });

        //Initialise la vitesse (vient de l'itinéraire s'il est chargé avant)
        changeMapsSpeed();
    });
//-->
</script>
<noscript>
<div id="map_static">
    <img alt="Carte du réseau schématique du STIF" src="fileadmin/templates/STIF/images/map.no.js.png"/>
</div>
</noscript>
<div id="map" class="menuCarto" style="width: 575px; display: none; margin: 0px; padding: 0px;">
    <ul>
        <li id="generalTab"><a href="#map-1">Général
            </a>
        </li>
        <li id="itinerary1Tab" style="display: none;"><a href="#map-2">Itinéraire
            </a>
        </li>
        <li id="itinerary2Tab" style="display: none;"><a href="#map-3">Itinéraire
            </a>
        </li>
        <li id="stepTab" style="display: none;"><a href="#map-4">Quartier
            </a>
        </li>
        <li id="districtTab" style="display: none;"><a href="#map-5">Quartier
            </a>
        </li>
    </ul>
    <div id="map-1" style="cursor: pointer; width: 573px; height: 495px; border: 1px solid #CCC; margin : -1px 0px 0px 2px ; padding: 0px"></div>
    <div id="map-2" style="cursor: pointer; width: 573px; height: 495px; border: 1px solid #CCC; margin : -1px 0px 0px 2px ; padding: 0px"></div>
    <div id="map-3" style="cursor: pointer; width: 573px; height: 495px; border: 1px solid #CCC; margin : -1px 0px 0px 2px ; padding: 0px"></div>
    <div id="map-4" style="cursor: pointer; width: 573px; height: 495px; border: 1px solid #CCC; margin : -1px 0px 0px 2px ; padding: 0px"></div>
    <div id="map-5" style="cursor: pointer; width: 573px; height: 495px; border: 1px solid #CCC; margin : -1px 0px 0px 2px ; padding: 0px"></div>
</div>

	</div>
	<!--TYPO3SEARCH_end--></div>
		</div>
		<hr class="clear" />
	</div>
	<div id="footer">
		<div class="left">© 2012 vianavigo</div>

		<ul class="menu right"><li class="noBorder"><a href="fr/mentions-legales/">Mentions légales</a></li><li><a href="fr/nous-contacter/">Contact</a></li><li><b><a href="fr/nos-services/affiliation-au-service-vianavigo/">Tous nos services !</a></b></li><li><a href="fr/plan-du-site/">Plan du site</a></li><li><a href="fr/aide/">Aide</a></li></ul>
	</div>
</div>




<div class="accesskey"><ul><li><a href="fr/aide/accessibilite/" accesskey="0">Liste des raccourcis</a></li><li><a href="fr/itineraire-plan-de-quartier/" accesskey="1">Page d’accueil</a></li><li><a href="fr/actualites-trafic/" accesskey="2">Page Actualité</a></li><li><a href="fr/plan-du-site/" accesskey="3">Page Plan du site</a></li><li><a href="fr/itineraire-plan-de-quartier/" accesskey="4">Page Itinéraire et plan de quartier</a></li><li><a href="fr/aide/" accesskey="6">Page Aide</a></li><li><a href="fr/nous-contacter/" accesskey="7">Page Contact</a></li><li><a href="fr/horaires-plans-de-lignes/trainrer/" accesskey="8">Fiches horaires &amp; plans</a></li></ul></div></body>
</html>