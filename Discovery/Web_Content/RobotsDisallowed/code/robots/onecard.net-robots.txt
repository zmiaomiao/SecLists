#The Robot Exclusion Standard, also known as the Robots Exclusion Protocol or robots.txt protocol, is a convention to prevent cooperating web spiders and other web robots from accessing all or part of a website which is otherwise publicly viewable. Robots are often used by search engines to categorize and archive web sites, or by webmasters to proofread source code. The standard is unrelated to, but can be used in conjunction with, Sitemaps, a robot inclusion standard for websites.

#If a site owner wishes to give instructions to web robots they must place a text file called robots.txt in the root of the web site hierarchy (e.g. www.example.com/robots.txt). This text file should contain the instructions in a specific format (see examples below). Robots that choose to follow the instructions try to fetch this file and read the instructions before fetching any other file from the web site. If this file doesn't exist web robots assume that the web owner wishes to provide no specific instructions.
#A robots.txt file on a website will function as a request that specified robots ignore specified files or directories in their search. This might be, for example, out of a preference for privacy from search engine results, or the belief that the content of the selected directories might be misleading or irrelevant to the categorization of the site as a whole, or out of a desire that an application only operate on certain data.
#For websites with multiple subdomains, each subdomain must have its own robots.txt file. If example.com had a robots.txt file but a.example.com did not, the rules that would apply for example.com would not apply to a.example.com.

#Examples

#This example allows all robots to visit all files because the wildcard "*" specifies all robots:

#	User-agent: *
#	Disallow:

#This example keeps all robots out:

#	User-agent: *
#	Disallow: /

#The next is an example that tells all crawlers not to enter four directories of a website:

#	User-agent: *
#	Disallow: /cgi-bin/
#	Disallow: /images/
#	Disallow: /tmp/
#	Disallow: /private/

#Example that tells a specific crawler not to enter one specific directory:

#	User-agent: BadBot # replace the 'BadBot' with the actual user-agent of the bot#	Disallow: /private/

#Example that tells all crawlers not to enter one specific file:

#	User-agent: *
#	Disallow: /directory/file.html

#Note that all other files in the specified directory will be processed.

#Example demonstrating how comments can be used:
# Comments appear after the "#" symbol at the start of a line, or after a directive
#	User-agent: * # match all bots
#	Disallow: / # keep them out

#Crawl-delay directive
#Several major crawlers support a Crawl-delay parameter, set to the number of seconds to wait between successive requests to the same server:
#	User-agent: *
#	Crawl-delay: 10

#Allow directive
#Some major crawlers support an Allow directive which can counteract a following Disallow directive.[4] [5] This is useful when one disallows an entire directory but still wants some HTML documents in that directory crawled and indexed. While by standard implementation the first matching robots.txt pattern always wins, Google's implementation differs in that Allow patterns with equal or more characters in the directive path win over a matching Disallow pattern.[6] Bing uses the Allow or Disallow directive which is the most specific.

#In order to be compatible to all robots, if one wants to allow single files inside an otherwise disallowed directory, it is necessary to place the Allow directive(s) first, followed by the Disallow, for example:

#	Allow: /folder1/myfile.html
#	Disallow: /folder1/
#This example will Disallow anything in /folder1/ except /folder1/myfile.html, since the latter will match first. In case of Google, though, the order is not important.

#Sitemap
#Some crawlers support a Sitemap directive, allowing multiple Sitemaps in the same robots.txt in the form:[8]

#	Sitemap: http://www.gstatic.com/s2/sitemaps/profiles-sitemap.xml
#	Sitemap: http://www.google.com/hostednews/sitemap_index.xml

#Extended standard
#An Extended Standard for Robot Exclusion has been proposed, which adds several new directives, such as Visit-time and Request-rate. For example:

#	User-agent: *
#	Disallow: /downloads/
#	Request-rate: 1/5         # maximum rate is one page every 5 seconds
#	Visit-time: 0600-0845     # only visit between 06:00 and 08:45 UTC (GMT)

#The first version of the Robot Exclusion standard does not mention anything about the "*" character in the Disallow: statement. Some crawlers like Googlebot and Slurp recognize strings containing "*", while MSNbot and Teoma interpret it in different ways.

User-agent: *
Disallow: /css/
Disallow: /dwr/

#Several major crawlers support a Crawl-delay parameter, set to the number of seconds to wait between successive requests to the same server:

Crawl-delay: 10
#Allow: /folder1/myfile.html
#Disallow: /folder1/

#Some crawlers support a Sitemap directive, allowing multiple Sitemaps in the same robots.txt in the form:

Sitemap: http://www.onecard.net/sitemap.xml

#An Extended Standard for Robot Exclusion has been proposed, which adds several new directives, such as Visit-time and Request-rate. For example:

Request-rate: 1/5         # maximum rate is one page every 5 seconds
Visit-time: 0200-0400     # only visit between 04:00 and 04:00 UTC (GMT)


